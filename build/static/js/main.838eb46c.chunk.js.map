{"version":3,"sources":["components/InputPanel.js","components/ResultDemo.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["InputPanel","props","state","uniqueName","isCm","isKg","height","heightFt","heightIn","weight","gender","bufFront","bufSide","fileFront","undefined","fileSide","this","setState","propChangeIsCm","event","target","value","file","isFront","reader","FileReader","onloadend","e","buf","result","readAsDataURL","input","files","doImagePreview","preventDefault","dataTransfer","myParams","Number","isMale","isValidData","propStartCalc","alert","className","htmlFor","type","id","placeholder","autoComplete","onChange","style","display","tabIndex","onClick","setIsCm","setIsKg","name","checked","onChangeGender","bind","onDragOver","onDragEnter","onDrop","onDropImage","src","alt","aria-hidden","onChangeImage","onClickSubmit","React","Component","ResultDemo","bodyParams","demoResult","console","log","map","lagelmap","i","key","label","paddingTop","field","Home","isBusy","formData","FormData","append","config","headers","document","getElementById","axios","post","then","resp0","resp","data","catch","err","err0","handleStartCalc","handleChangeIsCm","role","aria-labelledby","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.838eb46c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { cm2ft_in } from \"../Common\";\r\n\r\nexport default class InputPanel extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props); //propStartCalc\r\n        \r\n        this.state={\r\n            uniqueName: \"nick\",\r\n            isCm:true,\r\n            isKg:true,\r\n            height: '170',\r\n            heightFt: '6',\r\n            heightIn: '1',\r\n            weight: '85',\r\n            gender: \"female\",\r\n            bufFront:\"\",\r\n            bufSide:\"\",\r\n            fileFront:undefined,\r\n            fileSide:undefined\r\n        };\r\n    }\r\n\r\n    setIsCm(isCm){\r\n\r\n        this.setState({isCm});\r\n        this.props.propChangeIsCm(isCm);\r\n    }\r\n\r\n    setIsKg(isKg){\r\n        this.setState({isKg});\r\n    }\r\n\r\n\r\n    onChangeGender(event){\r\n        let gender = event.target.value;\r\n        let bufFront = \"\";\r\n        let bufSide = \"\";\r\n        this.setState({gender, bufFront, bufSide});\r\n    }\r\n\r\n\r\n    doImagePreview(file, isFront){\r\n        var reader = new FileReader();\r\n        reader.onloadend = (e) => {\r\n            let buf = e.target.result;\r\n            if(isFront) this.setState({bufFront: buf, fileFront: file});\r\n            else this.setState({bufSide: buf, fileSide: file});\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    onChangeImage(isFront){\r\n        return function(event){\r\n            let input = event.target;\r\n            if (input.files && input.files[0]) {\r\n                this.doImagePreview(input.files[0], isFront);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDropImage(isFront){\r\n        return function(event){\r\n            if(event.preventDefault) {event.preventDefault();}\r\n            var dt = event.dataTransfer;\r\n            var files = dt.files;\r\n            if (files && files[0]) {\r\n                this.doImagePreview(files[0], isFront);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    isValidData(myParams){\r\n        return true;\r\n    }\r\n\r\n    onClickSubmit(event){\r\n        event.preventDefault();\r\n\r\n        let {uniqueName, isKg, isCm, height, heightFt, heightIn, weight, gender, fileFront, fileSide} = this.state;\r\n        if(!isKg) weight = Number(weight) * 0.453592;\r\n        else weight = Number(weight);\r\n\r\n        if(!isCm) height = (Number(heightFt)*12 + Number(heightIn)) * 2.54;\r\n        else height = Number(height);\r\n\r\n        let isMale = (gender===\"male\")? true: false;\r\n        let myParams = {uniqueName, height, weight, isMale};\r\n\r\n        if(this.isValidData(myParams) && fileFront && fileSide) this.props.propStartCalc(myParams, fileFront, fileSide);\r\n        else alert('Invalid Input');\r\n    }\r\n\r\n    render(){\r\n\r\n        let {uniqueName, isKg, isCm, height, heightFt, heightIn, weight, gender, bufFront, bufSide} = this.state;\r\n        return(\r\n            <div>\r\n                <div className=\"content-block\">\r\n                    <div className=\"content-block-header\">\r\n                        <h3>Enter User Data</h3>\r\n                    </div>\r\n                    <div className=\"content-block-body\">\r\n                        <form>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"uniquename\" className=\"col-sm-3 col-form-label\">Name:</label>\r\n                                <div className=\"col-sm-9\">\r\n                                    <input type=\"text\" className=\"form-control\" id=\"uniquename\" placeholder=\"\" autoComplete=\"off\"\r\n                                    value={uniqueName} onChange={(e)=>this.setState({uniqueName:e.target.value})}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"height\" className=\"col-sm-3 col-form-label\">Height:</label>\r\n                                <div className=\"col-sm-9\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-9\">\r\n                                            <input type=\"number\" className=\"form-control height-input__cm \" placeholder=\"\"\r\n                                            value={height} style={{display:(isCm?'':'none')}}\r\n                                            onChange={(e)=>this.setState({height:e.target.value})}/>\r\n                                            <div className=\"height-input__in\" style={{display:(isCm?'none':'')}}>\r\n                                                <input type=\"number\" className=\"form-control\" placeholder=\"\"\r\n                                                value={heightFt}\r\n                                                onChange={(e)=>this.setState({heightFt:e.target.value})}/>\r\n                                                <input type=\"number\" className=\"form-control \" placeholder=\"\"\r\n                                                value={heightIn}\r\n                                                onChange={(e)=>this.setState({heightIn:e.target.value})}/>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-3 pr-2 pl-2 \">\r\n                                            <span className=\"height-input__switch\">\r\n                                                <button type=\"button\" tabIndex=\"-1\"\r\n                                                className={\"height-input__btn height-input__btn--cm\" + (isCm?\" active js-active-check\":\" js-active-check\")}\r\n                                                onClick={(e)=>this.setIsCm(true)}>cm</button>\r\n                                                <button type=\"button\" tabIndex=\"-1\"\r\n                                                className={\"height-input__btn height-input__btn--in\" + (!isCm?\" active js-active-check\":\" js-active-check\")}\r\n                                                onClick={(e)=>this.setIsCm(false)}>in</button>\r\n                                            </span>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"height\" className=\"col-sm-3 col-form-label\">Weight:</label>\r\n                                <div className=\"col-sm-9\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-9\">\r\n                                            <input type=\"number\" className=\"form-control height-input__cm \" placeholder=\"\"\r\n                                            value={weight}\r\n                                            onChange={(e)=>this.setState({weight:e.target.value})}/>\r\n                                        </div>\r\n                                        <div className=\"col-3 pr-2 pl-2 \">\r\n                                            <span className=\"height-input__switch\">\r\n                                                <button className={\"height-input__btn height-input__btn--kg\" + (isKg?\" active\":\"\")} type=\"button\"\r\n                                                onClick={(e)=>this.setIsKg(true)}>kg</button>\r\n                                                <button className={\"height-input__btn height-input__btn--lb\" + (!isKg?\" active\":\"\")} type=\"button\"\r\n                                                onClick={(e)=>this.setIsKg(false)}>lb</button>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <fieldset className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <legend className=\"col-form-label col-sm-3 pt-0\">Gender:</legend>\r\n                                    <div className=\"col-sm-9\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input select-gender\" type=\"radio\" name=\"gender\" id=\"female\" value=\"female\" checked={(gender===\"female\")?true:false}\r\n                                            onChange={this.onChangeGender.bind(this)}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"female\">\r\n                                                Female\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input select-gender\" type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" checked={(gender===\"female\")?false:true}\r\n                                            onChange={this.onChangeGender.bind(this)}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"male\">\r\n                                                Male\r\n                                            </label>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n\r\n\r\n\r\n                            <div className=\"form-group row mt-4\">\r\n                                <div className=\"col-sm-6 front_photo upload-iamges\">\r\n                                    <label htmlFor=\"front_photo\" id=\"front_photo_input\"\r\n                                    onDragOver = {(e)=>{e.preventDefault(); return false;}}\r\n                                    onDragEnter = {(e)=>{e.preventDefault(); return false;}}\r\n                                    onDrop={this.onDropImage(true).bind(this)}>\r\n                                        <div className=\"body-model__form-file-preview\" id=\"list\">\r\n                                            <div className=\"body-model__form-file-preview\" style={{display:(gender==='male'?'':'none')}}>\r\n                                                <img className=\"body-model__form-file-preview-real img-fluid\"\r\n                                                src={bufFront===\"\"? \"static/images/male.svg\" : bufFront} alt=\"Male\"/>\r\n                                            </div>\r\n                                            <div className=\"body-model__form-file-preview\" style={{display:(gender==='female'?'':'none')}}>\r\n                                                <img className=\"body-model__form-file-preview-real img-fluid\"\r\n                                                src={bufFront===\"\"? \"static/images/female.svg\" : bufFront} alt=\"Female\"/>\r\n                                            </div>\r\n                                            <img className=\"body-model__form-file-preview-real img-fluid\" \r\n                                            src=\"images/front-dummy.jpg\" alt=\"\" style={{display:'none'}}/>\r\n                                        </div>\r\n                                        <div className=\"body-model__form-file-overflow\">\r\n                                            <p className=\"body-model__form-file-pos\">Front photo</p>\r\n                                            <p className=\"body-model__form-file-text\">Drop files to upload<br/> or click here</p>\r\n                                            <i className=\"body-model__form-file-icon fa fa-camera\" aria-hidden=\"true\" style={{display:'none'}}></i>\r\n                                        </div>\r\n                                    </label>\r\n                                    <input type=\"file\" className=\"form-control-file\" id=\"front_photo\" style={{display:'none'}}\r\n                                    onChange={this.onChangeImage(true).bind(this)}/>\r\n                                </div>\r\n                                <div className=\"col-sm-6 side_photo upload-iamges\">\t\t\r\n                                    <label htmlFor=\"side_photo\" id=\"side_photo_input\" \r\n                                    onDragOver = {(e)=>{e.preventDefault(); return false;}}\r\n                                    onDragEnter = {(e)=>{e.preventDefault(); return false;}}\r\n                                    onDrop={this.onDropImage(false).bind(this)}>\r\n                                        <div className=\"body-model__form-file-preview\" id=\"list2\">\r\n                                            <div className=\"body-model__form-file-preview\" style={{display:(gender==='male'?'':'none')}}>\r\n                                                <img className=\"body-model__form-file-preview-real img-fluid\"\r\n                                                src={bufSide===\"\"? \"static/images/side-male.svg\" : bufSide} alt=\"Male\"/>\r\n                                            </div>\r\n                                            <div className=\"body-model__form-file-preview\" style={{display:(gender==='female'?'':'none')}}>\r\n                                                <img className=\"body-model__form-file-preview-real img-fluid\" \r\n                                                src={bufSide===\"\"? \"static/images/side-female.svg\" : bufSide} alt=\"Female\"/>\r\n                                            </div>\r\n                                            <img className=\"body-model__form-file-preview-real img-fluid \" src=\"images/side-dummy.jpg\" alt=\"\" style={{display:'none'}}/>\r\n                                        </div>\r\n                                        <div className=\"body-model__form-file-overflow\">\r\n                                            <p className=\"body-model__form-file-pos\">Side photo</p>\r\n                                            <p className=\"body-model__form-file-text\">Drop files to upload<br/> or click here</p>\r\n                                            <i className=\"body-model__form-file-icon fa fa-camera\" aria-hidden=\"true\" style={{display:'none'}}></i>\r\n                                        </div>\r\n                                    </label>\r\n                                    <input type=\"file\" className=\"form-control-file\" id=\"side_photo\" style={{display:'none'}}\r\n                                    onChange={this.onChangeImage(false).bind(this)}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"content--continue-btn\">\r\n\t\t\t\t\t<button id=\"save-mtm-client\" className=\"button button--purple button--lg body-model__btn\"\r\n                    onClick={this.onClickSubmit.bind(this)}><span className=\"text\">Calculate</span></button>\r\n\t\t\t\t</div>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ResultDemo extends React.Component{\r\n    // constructor(props){ // demoResult, fileResultFront, fileResultSide\r\n    //     super(props);\r\n    // }\r\n\r\n    render(){\r\n        \r\n        let bodyParams = this.props.demoResult.bodyParams; \r\n        if(bodyParams===undefined) bodyParams={};\r\n        console.log(bodyParams);\r\n\r\n        let labelmaps = [\r\n            {\"label\":\"Neck Size\", \"field\":\"Neck_Round_Length\"}, \r\n            {\"label\":\"Bicep Size\", \"field\":\"Arm_Round_Length\"}, \r\n            {\"label\":\"Forearm Size\", \"field\":\"\"}, \r\n            {\"label\":\"Waist\", \"field\":\"Waist_Round_Length\"}, \r\n            {\"label\":\"Hip Size\", \"field\":\"Hip_Round_Length\"}, \r\n            {\"label\":\"Thigh Size\", \"field\":\"\"}, \r\n            {\"label\":\"Calf Size\", \"field\":\"\"}\r\n        ];\r\n\r\n        // let url0 = urlAPI +\"/\"+ demoResult.url0;\r\n        // let url1 = urlAPI +\"/\"+ demoResult.url1;\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <table className=\"body-model__params-col\">\r\n                        <tbody>\r\n                            {labelmaps.map((lagelmap, i)=>{\r\n                                return(\r\n                                    <tr key={i} className=\"body-model__param\">\r\n                                        <td><span className=\"text\">{lagelmap.label}:</span></td>\r\n                                        <td><div className=\"input body-model__param-input\" style={{paddingTop:'5px'}}>{(bodyParams[lagelmap.field]===null)?(''):(bodyParams[lagelmap.field])}</div></td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n{/*                 \r\n                <div className=\"col-6\">\r\n                    <img className= \"w3-border w3-padding\" src={url0} style={{width:\"100%\"}} alt=\"\"/>\r\n                    <img className= \"w3-border w3-padding\" src={url1} style={{width:\"100%\"}} alt=\"\"/>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport InputPanel from './InputPanel';\r\nimport ResultDemo from './ResultDemo';\r\nimport {urlAPI} from '../Common';\r\n\r\nexport default class Home extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            demoResult:{},\r\n            isCm:true,\r\n            isBusy: false\r\n        }\r\n    }\r\n\r\n    handleChangeIsCm(isCm){\r\n        this.setState({isCm});\r\n    }\r\n\r\n    handleStartCalc(myParams, fileFront, fileSide){       \r\n        const formData = new FormData();\r\n        formData.append('userPhoto', fileFront);\r\n        formData.append('userPhoto', fileSide);\r\n        const config = {headers:{'content-type':'multipart/form-data'}};\r\n\r\n        this.setState({isBusy:true});\r\n        document.getElementById(\"overlay\").style.display = \"block\";\r\n        axios.post(urlAPI + \"/upload_params\", {myParams}).then((resp0)=>{\r\n            axios.post(urlAPI + \"/upload_photos\", formData, config).then((resp) => {\r\n                let demoResult = resp.data;\r\n                this.setState({demoResult, isBusy:false});\r\n                document.getElementById(\"overlay\").style.display = \"none\";\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                // if(err.response.status===400) alert(\"Invalid Photo Input!\");\r\n                document.getElementById(\"overlay\").style.display = \"none\";\r\n            });\r\n        }).catch((err0)=>{\r\n            console.log(err0);\r\n            // if(err0.response.status===400) alert(\"Invalid Params Input!\");\r\n            document.getElementById(\"overlay\").style.display = \"none\";\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main-wrapper\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"main-page-title\">\r\n                        <h1 className=\"main-content__header-title\">Manual upload of the customer</h1>\r\n                    </div>\r\n                    \r\n                    <div className=\"main-content-wrapper content-section row\">\r\n                        <div className=\"col-md-5\">\r\n                            <InputPanel propStartCalc={this.handleStartCalc.bind(this)}\r\n                            propChangeIsCm={this.handleChangeIsCm.bind(this)}/>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-7\">\r\n                            <div className=\"content-block\">\r\n                                <div className=\"content-block-header\">\r\n                                    <h3 className='js-measurement-unit'>Measurements ({this.state.isCm?\"mm\":'mm'})</h3>\r\n                                </div>\r\n                                <div className=\"content-block-body measurenments-details\">\r\n                                    <div className=\"tab-content\" id=\"myTabContent\">\r\n                                        <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n                                            <ResultDemo demoResult={this.state.demoResult} isCm={this.state.isCm}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"content--continue-btn\">\r\n                                <button id=\"save-mtm-client\" className=\"button button--purple button--lg body-model__btn\" type=\"submit\"><span className=\"text\">Add new customer</span></button>\r\n                            </div> */}\r\n                        </div>                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\n\nimport Home from './components/Home';\n\nfunction App() {\n\n    return (\n        <div>\n            <Home/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}